// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingApp.Models;

#nullable disable

namespace ParkingApp.Migrations
{
    [DbContext(typeof(ParkingContext))]
    [Migration("20240729085102_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ParkingApp.Models.Lavel", b =>
                {
                    b.Property<int>("LavelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LavelId"), 1L, 1);

                    b.Property<string>("FloorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalNumOfSpot")
                        .HasColumnType("int");

                    b.Property<string>("VehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LavelId");

                    b.ToTable("Lavels");
                });

            modelBuilder.Entity("ParkingApp.Models.ParkingSpot", b =>
                {
                    b.Property<int>("ParkingSpotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParkingSpotId"), 1L, 1);

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("LavelId")
                        .HasColumnType("int");

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParkingSpotId");

                    b.HasIndex("LavelId");

                    b.ToTable("ParkingSpots");
                });

            modelBuilder.Entity("ParkingApp.Models.Vehicle.ParkingVehicle", b =>
                {
                    b.Property<int>("ParkingVehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParkingVehicleId"), 1L, 1);

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParkingSpotId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParkingVehicleId");

                    b.HasIndex("ParkingSpotId");

                    b.ToTable("ParkingVehicles");
                });

            modelBuilder.Entity("ParkingApp.Models.ParkingSpot", b =>
                {
                    b.HasOne("ParkingApp.Models.Lavel", "Lavel")
                        .WithMany("ParkingSpots")
                        .HasForeignKey("LavelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lavel");
                });

            modelBuilder.Entity("ParkingApp.Models.Vehicle.ParkingVehicle", b =>
                {
                    b.HasOne("ParkingApp.Models.ParkingSpot", "ParkingSpot")
                        .WithMany()
                        .HasForeignKey("ParkingSpotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParkingSpot");
                });

            modelBuilder.Entity("ParkingApp.Models.Lavel", b =>
                {
                    b.Navigation("ParkingSpots");
                });
#pragma warning restore 612, 618
        }
    }
}
